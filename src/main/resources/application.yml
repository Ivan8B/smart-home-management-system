server:
  port: 9080

management:
  endpoints:
    web:
      exposure:
        include: prometheus
      base-path: /

spring:
  cache:
    caffeine:
      spec: maximumSize=100,expireAfterWrite=15s

bot:
  # Параметры подключения к чатботу.
  name: ${BOT_NAME}
  token: ${BOT_TOKEN}
  # Пользователи, которые могут писать боту (бот поддерживает только личные диалоги)
  validUserIds: ${BOT_VALID_USER_IDS}
  # Идентификаторы чатов, в которые бот будет слать рассылки
  chatIds: ${BOT_CHAT_IDS}
  # Периодичность запуска таски, которая проверяет статус сессии и пытается переподключиться
  sessionCheckInterval: PT1M

modbus:
  tcpHost: dr302
  tcpPort: 8234
  # Задержка после каждой операции с modbus, иначе устройства не успевают обрабатывать команды
  delay: 75

temperature:
  # Периодичность расчета необходимости отопления в доме
  controlInterval: PT1M
  # Целевая температура в доме
  insideTarget: 22
  # Температура на улице, при повышении до которой отопление должно отключаться
  outsideMax: 20
  # Отопление включается при опускании уличной на гистерезис от заданной
  hysteresis: 2

# Настройки плат опроса датчиков DS18B20, модель R4DCB08
temperatureSensorsBoard:
  # плата 1
  board1:
    # modbus slaveId
    address: 1
  # Настройки регистров температурных сенсоров находятся в enum TemperatureSensor

# Настройки управления газовым котлом
gasBoiler:
  # Настройки управления реле газового котла
  relay:
    # Modbus slaveId
    address: 2
    # Coil в который пишется значение (F05), нумерация с 0
    coil: 0
  # Периодичность опроса подачи газового котла (в отопление), чтобы понимать его статус
  direct:
    pollInterval: PT15S
  # Набор температур для расчета целевой температуры обратки для включения газового котла в зависимости от температуры на улице
  temperature:
    # Минимальная разница между подачей и обраткой при которой котел считается работающим
    turnOnMinDelta: 1
    # Падение температуры подачи от максимальной за период при которой котел считается отключившимся
    turnOffDirectDelta: 3
    # Интервал допустимых температур подачи по которым считается целевая температура котла
    direct:
      # при включенной обманке (когда на улице выше +1°) по температурной кривой N20 подача будет не меньше чем 47°
      min: 47
      max: 71
      # Разница между максимальной температурой за цикл и целевой, при которой (и меньше) считаем, что котел отключился по достижению целевой подачи
      blockDelta: 10
    # Интервал допустимых температур обратки из которых берется температура для включения котла
    return:
      onMaxCurvePoint: 28   # При weatherCurve max (когда тепло) - опорная точка прямой обратки
      onMinCurvePoint: 45   # При weatherCurve min (когда холодно) - опорная точка прямой обратки
      min: 24               # Минимально возможная температура обратки для включения котла
    # Температурный интервал выбранной кривой погодозависимой автоматики котла, сейчас выбрана кривая N20
    weatherCurve:
      min: -20
      # при температуре выше этой будет включаться обманка на температурном датчике котла
      max: 1
  fakeOutsideTemperature:
    # Периодичность управления реле обманки
    controlInterval: PT5M
    # Главное реле обманки (переключающее между обманками и температурным датчиком)
    mainRelay:
      # Modbus slaveId
      address: 4
      # Coil в который пишется значение (F05), нумерация с 0
      coil: 0
    # Вторичное реле обманки (переключающее между обманкой на +1° и -20°)
    secondaryRelay:
      # Modbus slaveId
      address: 4
      # Coil в который пишется значение (F05), нумерация с 0
      coil: 1
  # Объем воды проходящий через котел в режиме отопления (м3/ч)
  waterFlow: 1.23

# Настройки управления электрическим котлом
electricBoiler:
  # Настройки управления реле электрического котла
  relay:
    # Modbus slaveId
    address: 3
    # Coil в который пишется значение (F05), нумерация с 0
    coil: 0
  # Периодичность опроса температуры в котельной для управления электрокотлом
  controlInterval: PT5M
  # Электрокотел включается при опускании температуры в котельной меньше минимальной, а отключается при поднятии на гистерезис от минимальной
  hysteresis: 1

# Настройки управления теплым полом
floorHeating:
  # Периодичность запуска управления теплым полом
  controlInterval: PT2M
  # Количество расчетов процента открытия, по среднему из которых выставляется клапан
  valuesCountForAverage: 60
  temperature:
    # Минимальная и максимальная температура подачи в теплый пол
    direct:
      min: 28
      max: 45
      # Константа, которая добавляется к температуре подачи при расчете
      const: 3
    # Коэффициент изолированности, определяет влияние разницы между целевой температурой в помещении и на улице на целевую температуру подачи
    k: 0.4
  # Настройки клапана подмеса
  valve:
    # Реле управляющее питанием сервопривода клапана
    relay:
      # Modbus slaveId
      address: 2
      # Coil в который пишется значение (F05), нумерация с 0
      coil: 1
      # Расчетное время подачи питания на клапан
      rotationTime: 90
    # Цифро-аналоговый преобразователь
    dac:
      # Modbus slaveId
      address: 5
      # Регистр, из которого читается и в который пишется значение (F03, F06)
      register: 1
      # Точность установки сервопривода клапана (в процентах)
      accuracy: 3
      # Клапан вращается нелинейно, выставляем напряжение по формуле gradient * (рассчитанный процент) + constant
      correction:
        gradient: 0.5
        constant: 25

# Реле управляющее питанием насосов отопления
heatingPumps:
  relay:
    # Modbus slaveId
    address: 3
    # Coil в который пишется значение (F05), нумерация с 0
    coil: 1
    # Периодичность запуска таски управления реле (она фактически включает и выключает реле насосов)
    controlInterval: PT5M

# Настройки управления уличным освещением
streetLight:
  # Настройки реле, управляющего освещением
  relay:
    # Modbus slaveId
    address: 6
    # Coil в который пишется значение (F05), нумерация с 0
    coil: 1
  # Периодичность расчета необходимости освещения
  controlInterval: PT5M
  # Широта и долгота места, для которого рассчитывается время суток
  latitude: ${LATITUDE}
  longitude: ${LONGITUDE}

# Настройки управления обогрева воронок
funnelHeating:
  # Настройки реле, управляющего обогревом
  relay:
    # Modbus slaveId
    address: 6
    # Coil в который пишется значение (F05), нумерация с 0
    coil: 1
  # Периодичность расчета необходимости обогрева
  controlInterval: PT15M
  # Пороговые значения температуры между которыми включается обогрев
  temperature:
    min: -2.0
    max: 2.0

# Настройки опроса напряжения на входе в ИБП
cityPowerInput:
  relay:
    # Modbus slaveId
    address: 2
    # DiscreteInput к которому подключено реле электрической линии города
    discreteInput: 0
  # Периодичность опросов напряжения на входе в ИБП
  controlInterval: PT1M

# Настройки управления климатом в жилых комнатах
livingRooms:
  # Большая спальня
  mainBedroom:
    # универсальный датчик (температура, влажность, CO2), модель CO2RS485
    universalSensor:
      # Modbus slaveId
      address: 7
  # Вторая спальня
  secondBedroom:
    # универсальный датчик (температура, влажность, CO2), модель CO2RS485
    universalSensor:
      # Modbus slaveId
      address: 7
  # Кабинет
  study:
    # универсальный датчик (температура, влажность, CO2), модель CO2RS485
    universalSensor:
      # Modbus slaveId
      address: 7
  # Гостиная
  lounge:
    # универсальный датчик (температура, влажность, CO2), модель CO2RS485
    universalSensor:
      # Modbus slaveId
      address: 7

health:
  # Периодичность опросов селфмониторинга (проверки по аварийным событиям сервиса HealthService и критичных температур)
  controlInterval: PT15M

logging:
  config: classpath:log4j2.yml
